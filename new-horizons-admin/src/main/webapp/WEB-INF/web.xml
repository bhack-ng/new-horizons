<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	      http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
		 version="2.5">

	<display-name>Arbat-baza</display-name>
	<description>Database for real estate agency</description>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- //// -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- ZK -->
	<listener>
		<description>ZK listener for session cleanup</description>
		<listener-class>org.zkoss.zk.ui.http.HttpSessionListener</listener-class>
	</listener>

	<servlet>
		<description>ZK loader for ZUML pages</description>
		<servlet-name>zkLoader</servlet-name>
		<servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>

		<!-- Must. Specifies URI of the update engine (DHtmlUpdateServlet).
		It must be the same as <url-pattern> for the update engine.
		-->
		<init-param>
			<param-name>update-uri</param-name>
			<param-value>/zkau</param-value>
		</init-param>
		<!-- Optional. Specifies whether to compress the output
		of the ZK loader. It speeds up the transmission over slow Internet.
		However, if you configure a filter to post-processing the
		output, you might have to disable it.

		Default: true
		<init-param>
			<param-name>compress</param-name>
			<param-value>true</param-value>
		</init-param>
		-->
		<!-- [Optional] Specifies the default log level: OFF, ERROR, WARNING,
			INFO, DEBUG and FINER. If not specified, the system default is used.
		<init-param>
			<param-name>log-level</param-name>
			<param-value>OFF</param-value>
		</init-param>
		-->
		<load-on-startup>1</load-on-startup><!-- Must -->
	</servlet>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zul</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zhtml</url-pattern>
	</servlet-mapping>

	<servlet>
		<description>The asynchronous update engine for ZK</description>
		<servlet-name>auEngine</servlet-name>
		<servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>auEngine</servlet-name>
		<url-pattern>/zkau/*</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>photoRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>photoRequestHandler</servlet-name>
		<url-pattern>/photo</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>agentPhotoRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>agentPhotoRequestHandler</servlet-name>
		<url-pattern>/agent/photo</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>commerceRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>commerceRequestHandler</servlet-name>
		<url-pattern>/cian/commerical.xml</url-pattern>
		<url-pattern>/external/commerical.xml</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>liveLeaseRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>liveLeaseRequestHandler</servlet-name>
		<url-pattern>/cian/liveLease.xml</url-pattern>
		<url-pattern>/external/liveLease.xml</url-pattern>
		<url-pattern>/site/liveLease.xml</url-pattern>
		<url-pattern>/site/flatRent.xml</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>liveSaleRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>liveSaleRequestHandler</servlet-name>
		<url-pattern>/cian/liveSale.xml</url-pattern>
		<url-pattern>/external/liveSale.xml</url-pattern>
		<url-pattern>/site/liveSale.xml</url-pattern>
		<url-pattern>/site/flatSale.xml</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>avitoRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>avitoRequestHandler</servlet-name>
		<url-pattern>/avito/avito.xml</url-pattern>
		<url-pattern>/external/avito.xml</url-pattern>
	</servlet-mapping>

	<!-- для импорта в yandex -->
	<servlet>
		<servlet-name>yandexRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>yandexRequestHandler</servlet-name>
		<url-pattern>/yandex/yandex.xml</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>friendsRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>friendsRequestHandler</servlet-name>
		<url-pattern>/friends.xml</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>dbFileRequestHandler</servlet-name>
		<servlet-class>org.springframework.web.context.support.HttpRequestHandlerServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>dbFileRequestHandler</servlet-name>
		<url-pattern>/innerFiles</url-pattern>
	</servlet-mapping>

	<!-- Сервлет, отправляющий JSON. -->
	<servlet>
		<servlet-name>jsonProducerHandler</servlet-name>
		<servlet-class>
			org.springframework.web.context.support.HttpRequestHandlerServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>jsonProducerHandler</servlet-name>
		<url-pattern>/show-offices/data.js</url-pattern>
	</servlet-mapping>

	<!-- Сервлет, сохраняющий кординаты. -->
	<servlet>
		<servlet-name>coordsSaverHandler</servlet-name>
		<servlet-class>
			org.springframework.web.context.support.HttpRequestHandlerServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>coordsSaverHandler</servlet-name>
		<url-pattern>/bind-realty/save</url-pattern>
	</servlet-mapping>

	<!-- Сервлет, отправляющий изображения. -->
	<servlet>
		<servlet-name>imageDownloadHandler</servlet-name>
		<servlet-class>
			org.springframework.web.context.support.HttpRequestHandlerServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>imageDownloadHandler</servlet-name>
		<url-pattern>/show-offices/image</url-pattern>
	</servlet-mapping>

	<!-- Сервлет, отправляющий данные на ЦИАН об аренде офисов.-->
	<servlet>
		<servlet-name>newCianXmlCommercialExportHandler</servlet-name>
		<servlet-class>
			org.springframework.web.context.support.HttpRequestHandlerServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>newCianXmlCommercialExportHandler</servlet-name>
		<url-pattern>/cian2/commercial-lease/office/</url-pattern>
	</servlet-mapping>

	<!-- Сервлет, устанавливающий путь к JS файлу. -->
	<servlet>
		<servlet-name>showOfficesHandler</servlet-name>
		<servlet-class>
			org.springframework.web.context.support.HttpRequestHandlerServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>showOfficesHandler</servlet-name>
		<url-pattern>/show-offices/index.html</url-pattern>
		<url-pattern>/multi-show-offices/index.html</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<display-name>CXF Servlet</display-name>
		<servlet-class>
			org.apache.cxf.transport.servlet.CXFServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/api/*</url-pattern>
	</servlet-mapping>

	<!-- [Optional]
	Uncomment if you want to use the ZK filter to post process the HTML output
	generated by other technology, such as JSP and velocity.
	<filter>
		<filter-name>zkFilter</filter-name>
		<filter-class>org.zkoss.zk.ui.http.DHtmlLayoutFilter</filter-class>
		<init-param>
			<param-name>extension</param-name>
			<param-value>html</param-value>
		</init-param>
		<init-param>
			<param-name>compress</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>zkFilter</filter-name>
		<url-pattern>your URI pattern</url-pattern>
	</filter-mapping>
	-->


	<filter>
        <filter-name>springFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>transactionFilter</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>springFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



	<resource-ref>
		<description>DataSource Reference</description>
		<res-ref-name>jdbc/newHorizonsDB</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

    <!-- /////////// -->
	<!-- [Optional] Session timeout -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- [Optional] MIME mapping -->
	<mime-mapping>
		<extension>doc</extension>
		<mime-type>application/vnd.ms-word</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>gif</extension>
		<mime-type>image/gif</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>htm</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>html</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpeg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>jpg</extension>
		<mime-type>image/jpeg</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>js</extension>
		<mime-type>text/javascript</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>pdf</extension>
		<mime-type>application/pdf</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>png</extension>
		<mime-type>image/png</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>txt</extension>
		<mime-type>text/plain</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xls</extension>
		<mime-type>application/vnd.ms-excel</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xml</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zhtml</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>zul</extension>
		<mime-type>text/html</mime-type>
	</mime-mapping>
    <welcome-file-list>
        <welcome-file>index.zul</welcome-file>
		<welcome-file>index.zhtml</welcome-file>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
    </welcome-file-list>
</web-app>
